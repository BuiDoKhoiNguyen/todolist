{
  "info": {
    "name": "Todolist API Test Collection",
    "description": "Collection cho việc test API của ứng dụng todolist",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    },
    {
      "key": "token",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "1. Authentication",
      "item": [
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('token', response.id_token);",
                  "    pm.test('Login successful', () => {",
                  "        pm.expect(response.id_token).to.not.be.undefined;",
                  "    });",
                  "} else {",
                  "    pm.test('Login failed', () => {",
                  "        pm.expect.fail('Login should succeed');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin\",\n  \"rememberMe\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/authenticate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "authenticate"]
            }
          }
        },
        {
          "name": "Login Failed",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login should fail with wrong password', () => {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"wrong_password\",\n  \"rememberMe\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/authenticate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "authenticate"]
            }
          }
        }
      ]
    },
    {
      "name": "2. Categories",
      "item": [
        {
          "name": "Create Category",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Category created successfully', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.id).to.not.be.undefined;",
                  "    pm.collectionVariables.set('categoryId', response.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Công việc\",\n  \"description\": \"Các task liên quan đến công việc\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories"]
            }
          }
        },
        {
          "name": "Get All Categories",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get categories successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories"]
            }
          }
        }
      ]
    },
    {
      "name": "3. Tags",
      "item": [
        {
          "name": "Create Tag",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Tag created successfully', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.id).to.not.be.undefined;",
                  "    pm.collectionVariables.set('tagId', response.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"urgent\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tags",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tags"]
            }
          }
        },
        {
          "name": "Create Duplicate Tag",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": ["pm.test('Duplicate tag should fail', () => {", "    pm.expect(pm.response.code).to.equal(400);", "});"]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"urgent\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tags",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tags"]
            }
          }
        }
      ]
    },
    {
      "name": "4. Tasks",
      "item": [
        {
          "name": "Create Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Task created successfully', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.id).to.not.be.undefined;",
                  "    pm.collectionVariables.set('taskId', response.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Hoàn thành báo cáo tháng\",\n  \"description\": \"Viết báo cáo tổng kết công việc tháng 7\",\n  \"status\": \"PENDING\",\n  \"priority\": \"HIGH\",\n  \"dueDate\": \"2024-07-15T10:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks"]
            }
          }
        },
        {
          "name": "Get All Tasks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get tasks successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks?page=0&size=20",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "Get Task by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get task by ID successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.id).to.not.be.undefined;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", "{{taskId}}"]
            }
          }
        },
        {
          "name": "Update Task Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Task status updated successfully', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.status).to.equal('IN_PROGRESS');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": {{taskId}},\n  \"status\": \"IN_PROGRESS\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", "{{taskId}}"]
            }
          }
        },
        {
          "name": "Get Tasks by Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get tasks by status successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/status/PENDING",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", "status", "PENDING"]
            }
          }
        },
        {
          "name": "Search Tasks",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Search tasks successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/search?title=báo cáo",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", "search"],
              "query": [
                {
                  "key": "title",
                  "value": "báo cáo"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "5. Subtasks",
      "item": [
        {
          "name": "Create Subtask",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Subtask created successfully', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.id).to.not.be.undefined;",
                  "    pm.collectionVariables.set('subtaskId', response.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Thu thập dữ liệu\",\n  \"status\": \"PENDING\",\n  \"taskId\": {{taskId}}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/subtasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "subtasks"]
            }
          }
        },
        {
          "name": "Get Subtasks by Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get subtasks successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/subtasks/task/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "subtasks", "task", "{{taskId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "6. Comments",
      "item": [
        {
          "name": "Create Comment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Comment created successfully', () => {",
                  "    pm.expect(pm.response.code).to.equal(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.id).to.not.be.undefined;",
                  "    pm.collectionVariables.set('commentId', response.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Đây là comment đầu tiên cho task này\",\n  \"taskId\": {{taskId}}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/comments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "comments"]
            }
          }
        },
        {
          "name": "Get Comments by Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get comments successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/comments/task/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "comments", "task", "{{taskId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "7. Health Check",
      "item": [
        {
          "name": "Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Health check successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.status).to.equal('UP');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/management/health",
              "host": ["{{baseUrl}}"],
              "path": ["management", "health"]
            }
          }
        }
      ]
    },
    {
      "name": "8. Error Handling",
      "item": [
        {
          "name": "Get Non-existent Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Should return 404 for non-existent task', () => {",
                  "    pm.expect(pm.response.code).to.equal(404);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/99999",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", "99999"]
            }
          }
        },
        {
          "name": "Unauthorized Access",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Should return 401 for unauthorized access', () => {",
                  "    pm.expect(pm.response.code).to.equal(401);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks"]
            }
          }
        }
      ]
    }
  ]
}
